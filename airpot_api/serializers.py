from rest_framework import serializers
import datetime
from airpot_api import models

class AirpotAfordSerializer(serializers.Serializer):
    """Serializes a name field for testing our APIView"""
    # dayoftheweek = serializers.CharField(max_length=10)

class SevenDaysForcastSerializer(serializers.Serializer):
    """Serializes a name field for testing our APIView"""
    # dayoftheweek = serializers.CharField(max_length=10)


class PollutantsForcastSerializer(serializers.Serializer):
    """Serializes a name field for testing our APIView"""
    pollutantId = serializers.IntegerField()
    # PM1 = serializers.IntegerField()
    # PM25 = serializers.IntegerField()
    # NO2 = serializers.IntegerField()
    # SO2 = serializers.IntegerField()
    # O3 = serializers.IntegerField()
    # CO = serializers.IntegerField()
    # NO = serializers.IntegerField()


class GetForcastSerializer(serializers.Serializer):
    """Serializes a name field for testing our APIView"""
    LOCATION_CHOICES = (
            ("BN435DE", "BN435DE"),
            ("RM70SR ", "RM70SR "),
            ("IG110UG", "IG110UG"),
            ("SS143GR", "SS143GR"),
            ("DA176AA", "DA176AA"),
            ("DA184HQ", "DA184HQ"),
            ("DA82EE", "DA82EE"),
            ("NW103JJ", "NW103JJ"),
            ("NW100JR", "NW100JR"),
            ("NW104JY", "NW104JY"),
            ("NW102UJ", "NW102UJ"),
            ("BN16AZ", "BN16AZ"),
            ("BR13BG", "BR13BG"),
            ("WC1B5BF", "WC1B5BF"),
            ("WC1V7DZ", "WC1V7DZ"),
            ("NW35DN", "NW35DN"),
            ("CM29QR", "CM29QR"),
            ("CM14TR", "CM14TR"),
            ("CM12QR", "CM12QR"),
            ("CM26LQ", "CM26LQ"),
            ("PO192EA", "PO192EA"),
            ("GU289DJ", "GU289DJ"),
            ("PO191DF", "PO191DF"),
            ("PO194FP", "PO194FP"),
            ("EC2Y8BS", "EC2Y8BS"),
            ("EC4M7LD", "EC4M7LD"),
            ("EC3A5DH", "EC3A5DH"),
            ("EC4R3TJ", "EC4R3TJ"),
            ("EC4R2SX", "EC4R2SX"),
            ("CO12UT", "CO12UT"),
            ("CO35JG", "CO35JG"),
            ("CO27EX", "CO27EX"),
            ("RH60HZ", "RH60HZ"),
            ("SW164AE", "SW164AE"),
            ("SW165RB", "SW165RB"),
            ("CR90EH", "CR90EH"),
            ("CR94DQ", "CR94DQ"),
            ("DA99NH", "DA99NH"),
            ("DA11HJ", "DA11HJ"),
            ("W37NY", "W37NY"),
            ("W51EF", "W51EF"),
            ("W30BU", "W30BU"),
            ("W30BU", "W30BU"),
            ("W30BJ", "W30BJ"),
            ("BN214JN", "BN214JN"),
            ("BN220US", "BN220US"),
            ("BN220US", "BN220US"),
            ("N112HL", "N112HL"),
            ("EN11AL", "EN11AL"),
            ("N182PA", "N182PA"),
            ("EN36HQ", "EN36HQ"),
            ("SE187HR", "SE187HR"),
            ("SE108AA", "SE108AA"),
            ("DA158TQ", "DA158TQ"),
            ("SE93QJ", "SE93QJ"),
            ("SE100BG", "SE100BG"),
            ("SE181JY", "SE181JY"),
            ("SE109PA", "SE109PA"),
            ("SE96DP", "SE96DP"),
            ("SE100RS", "SE100RS"),
            ("N16HN", "N16HN"),
            ("N88NZ", "N88NZ"),
            ("N170AJ", "N170AJ"),
            ("HA26EH", "HA26EH"),
            ("HA74SL", "HA74SL"),
            ("TN388AH", "TN388AH"),
            ("RM139PW", "RM139PW"),
            ("RM70GJ", "RM70GJ"),
            ("UB35AQ", "UB35AQ"),
            ("UB79DL", "UB79DL"),
            ("RH138AB", "RH138AB"),
            ("RH121PY", "RH121PY"),
            ("RH204BN", "RH204BN"),
            ("N51PH", "N51PH"),
            ("N79SA", "N79SA"),
            ("W106EE", "W106EE"),
            ("KT26RN", "KT26RN"),
            ("SW153PP", "SW153PP"),
            ("KT67GD", "KT67GD"),
            ("SW82FF", "SW82FF"),
            ("SW97AE", "SW97AE"),
            ("SW166AQ", "SW166AQ"),
            ("BN99RU", "BN99RU"),
            ("BN72NZ", "BN72NZ"),
            ("SE64RU", "SE64RU"),
            ("SE83PQ", "SE83PQ"),
            ("SE231NQ", "SE231NQ"),
            ("SE137BJ", "SE137BJ"),
            ("SE146AA", "SE146AA"),
            ("TW110JJ", "TW110JJ"),
            ("SW191EQ", "SW191EQ"),
            ("SM45BP", "SM45BP"),
            ("PO20UX", "PO20UX"),
            ("RG61JH", "RG61JH"),
            ("E112HP", "E112HP"),
            ("IG27QZ", "IG27QZ"),
            ("CR53EE", "CR53EE"),
            ("RH16PN", "RH16PN"),
            ("RH67LH", "RH67LH"),
            ("RH67NU", "RH67NU"),
            ("RH110PX", "RH110PX"),
            ("SW139SA", "SW139SA"),
            ("SW139RD", "SW139RD"),
            ("SS69RL", "SS69RL"),
            ("SS67BZ", "SS67BZ"),
            ("TN402JN", "TN402JN"),
            ("TN317TU", "TN317TU"),
            ("TN145DH", "TN145DH"),
            ("TN145AW", "TN145AW"),
            ("BN85RS", "BN85RS"),
            ("SO10NR", "SO10NR"),
            ("SO140BY", "SO140BY"),
            ("SS91LT", "SS91LT"),
            ("SE152RW", "SE152RW"),
            ("SE16FA", "SE16FA"),
            ("SE162TU", "SE162TU"),
            ("SE12AW", "SE12AW"),
            ("SE58TU", "SE58TU"),
            ("CM248UD", "CM248UD"),
            ("CR04TF", "CR04TF"),
            ("CR04TA", "CR04TA"),
            ("SM60LY", "SM60LY"),
            ("KT48EB", "KT48EB"),
            ("CO156BS", "CO156BS"),
            ("CO168EU", "CO168EU"),
            ("RM187AD", "RM187AD"),
            ("RM176NF", "RM176NF"),
            ("RM161SA", "RM161SA"),
            ("SS177EG", "SS177EG"),
            ("E140NF", "E140NF"),
            ("E14RD", "E14RD"),
            ("CB101EA", "CB101EA"),
            ("CM226SA", "CM226SA"),
            ("SW84DU", "SW84DU"),
            ("SW111LN", "SW111LN"),
            ("SW151SY", "SW151SY"),
            ("SW151RD", "SW151RD"),
            ("SW151RB", "SW151RB"),
            ("SW170ED", "SW170ED"),
            ("SW182PU", "SW182PU"),
            ("TN225FA", "TN225FA"),
            ("BN265QX", "BN265QX"),
            ("W1G0AP", "W1G0AP"),
            ("WC2E8AA", "WC2E8AA"),
            ("W1K6JF", "W1K6JF"),
            ("SW1W9QE", "SW1W9QE"),
            ("SW1W9SD", "SW1W9SD"),
            ("SW1P2ED", "SW1P2ED"),
            ("NW15JU", "NW15JU"),
            ("W1C2PL", "W1C2PL"),
            ("W1D1BZ", "W1D1BZ"),
            ("WC2R1EG", "WC2R1EG"),
            ("SL67GU", "SL67GU"),
            ("SL45GE", "SL45GE"),
            ("SL61EQ", "SL61EQ"),
            ("BN149DL", "BN149DL"),
            ("SE92PF", "SE92PF"),
            ("L240SR", "L240SR"),
            ("M11LZ", "M11LZ"),
            ("TS42DS", "TS42DS"),
            ("NW15JU", "NW15JU"),
            ("NE21LQ", "NE21LQ"),
            ("NE18PA", "NE18PA"),
            ("NR12HB", "NR12HB"),
            ("NG13DW", "NG13DW"),
            ("NP197XU", "NP197XU"),
            ("OX14QD", "OX14QD"),
            ("EH458HG", "EH458HG"),
            ("PL11LA", "PL11LA"),
            ("PO20UY", "PO20UY"),
            ("PR15UR", "PR15UR"),
            ("SA131LW", "SA131LW"),
            ("RG61LD", "RG61LD"),
            ("DN161TJ", "DN161TJ"),
            ("SG191EQ", "SG191EQ"),
            ("SS08NB", "SS08NB"),
            ("S91WB", "S91WB"),
            ("SE152RW", "SE152RW"),
            ("SO140BY", "SO140BY"),
            ("ST11QE", "ST11QE"),
            ("RH204BT", "RH204BT"),
            ("SR31AD", "SR31AD"),
            ("SA12DA", "SA12DA"),
            ("E14RD", "E14RD"),
            ("RM176NF", "RM176NF"),
            ("CH426SU", "CH426SU"),
            ("WV125NA", "WV125NA"),
            ("WA51NS", "WA51NS"),
            ("WN11HQ", "WN11HQ"),
            ("LL137SF", "LL137SF"),
            ("YO307BY", "YO307BY"),
            ("YO14AP", "YO14AP"),
            ("LN57WB", "LN57WB"),
            ("HR68AG", "HR68AG"),
            ("LS28NU", "LS28NU"),
            ("LS62AA", "LS62AA"),
            ("IV35LD", "IV35LD"),
            ("HU28EN", "HU28EN"),
            ("SW1P2ED", "SW1P2ED"),
            ("RH67LH", "RH67LH"),
            ("EX148GP", "EX148GP"),
            ("UB79DL", "UB79DL"),
            ("N88NZ", "N88NZ"),
            ("N170AJ", "N170AJ"),
            ("FK39DA", "FK39DA"),
            ("G26AA", "G26AA"),
            ("PH336ET", "PH336ET"),
            ("EX43SN", "EX43SN"),
            ("EH89HS", "EH89HS"),
            ("BN220US", "BN220US"),
            ("TS160JW", "TS160JW"),
            ("DG12AS", "DG12AS"),
            ("G821RD", "G821RD"),
            ("CA25SP", "CA25SP"),
            ("CF102DB", "CF102DB"),
            ("CT11XN", "CT11XN"),
            ("NW35DN", "NW35DN"),
            ("BN16AZ", "BN16AZ"),
            ("BH77JY", "BH77JY"),
            ("FY39XD", "FY39XD"),
            ("TS234YF", "TS234YF"),
            ("DA82EE", "DA82EE"),
            ("B277NS", "B277NS"),
            ("AB11TL", "AB11TL"),
            ("AB245TP", "AB245TP"),
            ("PL126ED", "PL126ED"),
            ("EH268PR", "EH268PR"),
            ("SY95JN", "SY95JN"),
            ("EH260PQ", "EH260PQ"),
            ("DG130YA", "DG130YA"),
            ("WA35PT", "WA35PT"),
            ("YO188HP", "YO188HP"),
            ("S302BB", "S302BB"),
            ("ZE10RR", "ZE10RR"),
            ("BN265QX", "BN265QX"),
            ("PA477SJ", "PA477SJ"),
            ("TA117JR", "TA117JR"),
            ("CO168ET", "CO168ET"),
            ("SA678TG", "SA678TG"),
            ("ME39UA", "ME39UA"),
            ("IP172JU", "IP172JU"),
            ("IV232QH", "IV232QH"),
            ("NR257EJ", "NR257EJ"),
            ("CB50BW", "CB50BW"),
            ("TQ139LJ", "TQ139LJ"),
            ("WC1B5BF", "WC1B5BF"),
            ("PA286RS", "PA286RS"),
            ("W106EE", "W106EE"),
            ("S752RQ", "S752RQ"),
            ("FK39EY", "FK39EY"),
            ("UB35AQ", "UB35AQ"),
            ("BS28XW", "BS28XW"),
            ("SS177EG", "SS177EG"),
            ("ME57EH", "ME57EH"),
            ("CV326DG", "CV326DG"),
            ("LE26BB", "LE26BB"),
            ("S37SE", "S37SE"),
            ("G40PH", "G40PH"),
            ("EX328EU", "EX328EU"),
            ("AB118ET", "AB118ET"),
            ("PA477SJ", "PA477SJ"),
            ("SK83UB", "SK83UB"),
            ("NG85GT", "NG85GT"),
            ("RG13PF", "RG13PF"),
            ("SO150BS", "SO150BS"),
            ("TS181NP", "TS181NP"),
            ("SO206AR", "SO206AR"),
            ("PA152BX", "PA152BX"),
            ("PA286RU", "PA286RU"),
            ("BH231PE", "BH231PE"),
            ("L412XX", "L412XX"),
            ("B94HN", "B94HN"),
            ("WS125HG", "WS125HG"),
            ("PA286RU", "PA286RU"),
            ("OL27TH", "OL27TH"),
            ("BB13JP", "BB13JP"),
            ("W30BU", "W30BU"),
            ("CV59HS", "CV59HS"),
            ("G49AH", "G49AH"),
            ("PA286RS", "PA286RS"),
            ("B694HA", "B694HA"),
            ("NP115EW", "NP115EW"),
            ("HU88JW", "HU88JW"),
            ("SR52EB", "SR52EB"),
            ("G40QX", "G40QX"),
            ("BL98DR", "BL98DR"),
            ("WA86NL", "WA86NL"),
            ("S404NG", "S404NG"),
            ("LU48QW", "LU48QW"),
            ("LE12DB", "LE12DB"),
            ("ST35LT", "ST35LT"),
            ("DN13AX", "DN13AX"),
            ("S57AA", "S57AA"),
            ("WA101YB", "WA101YB"),
            ("BN149DL", "BN149DL"),
            ("PA286PZ", "PA286PZ"),
            ("BS29BW", "BS29BW"),
            ("CV31JN", "CV31JN"),
            ("DE12BD", "DE12BD"),
            ("DD37NW", "DD37NW"),
            ("NN28EJ", "NN28EJ"),
            ("PL65EL", "PL65EL"),
            ("WD65HL", "WD65HL"),
            ("TS247NR", "TS247NR"),
            ("DN402JG", "DN402JG"),
            ("TF32EX", "TF32EX"),
            ("EH89BY", "EH89BY"),
            ("B12PR", "B12PR"),
            ("DE142SQ", "DE142SQ"),
            ("CF21RL", "CF21RL"),
            ("WF132SU", "WF132SU"),
            ("PO13DL", "PO13DL"),
            ("SN31EA", "SN31EA"),
            ("SE231NQ", "SE231NQ"),
            ("B706DS", "B706DS"),
            ("BA16DB", "BA16DB"),
            ("CW13XB", "CW13XB"),
            ("NP442YB", "NP442YB"),
            ("TW110JJ", "TW110JJ"),
            ("NP165PT", "NP165PT"),
            ("S403AD", "S403AD"),
            ("M300YL", "M300YL"),
            ("CV324LY", "CV324LY"),
            ("TR230PR", "TR230PR"),
            ("PA776UD", "PA776UD"),
            ("BD58HR", "BD58HR"),
            ("OX11DE", "OX11DE"),
            ("CB23AH", "CB23AH"),
            ("DN13AW", "DN13AW"),
            ("E152RA", "E152RA"),
            ("E161LX", "E161LX"),
            ("B168DW", "B168DW"),
            ("B94EX", "B94EX"),
            ("B120YA", "B120YA"),
            ("B57DR", "B57DR"),
            ("B13DF", "B13DF"),
            ("DA176AA", "DA176AA"),
    )
    # date = serializers.DateField(("Date"), default=datetime.date.today)
    date = serializers.DateTimeField(format="%Y-%m-%d %H:%M:%S")
    # location = serializers.CharField(max_length=20)
    location = serializers.ChoiceField(choices = LOCATION_CHOICES)
    # time = serializers.TimeField((u"Conversation Time"))

    # choices = serializers.ChoiceField(choices = LOCATION_CHOICES)



class UserProfileSerializer(serializers.ModelSerializer):
    """Serializes a user profile object"""

    class Meta:
        model = models.UserProfile
        fields = ('id', 'email', 'name', 'password')
        extra_kwargs = {
            'password': {
                'write_only': True,
                'style': {
                    'input_type': 'password'
                }
            }
        }
    def create(self, validated_data):
        """Create and return a new user"""
        user = models.UserProfile.objects.create_user(
            email=validated_data['email'],
            name=validated_data['name'],
            password=validated_data['password']
        )

        return user